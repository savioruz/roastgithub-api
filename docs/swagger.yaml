basePath: /api/v1
definitions:
  models.ContentResponse:
    properties:
      generated_content:
        type: string
    type: object
  models.ContentResponseFailure:
    properties:
      error:
        type: string
    type: object
  models.ContentResponseSuccess:
    properties:
      data:
        $ref: '#/definitions/models.ContentResponse'
    type: object
  models.GithubContentResponse:
    properties:
      avatar_url:
        type: string
      generated_content:
        type: string
      username:
        type: string
    type: object
  models.GithubContentResponseSuccess:
    properties:
      data:
        $ref: '#/definitions/models.GithubContentResponse'
    type: object
  models.GithubRequest:
    properties:
      key:
        type: string
      lang:
        allOf:
        - $ref: '#/definitions/models.Language'
        enum:
        - auto
        - id
        - en
      username:
        maxLength: 32
        minLength: 6
        type: string
    required:
    - lang
    - username
    type: object
  models.Language:
    enum:
    - auto
    - id
    - en
    type: string
    x-enum-varnames:
    - LangAuto
    - LangID
    - LangEN
info:
  contact:
    email: jakueenak@gmail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Roast GitHub API
  version: "0.1"
paths:
  /roast/github:
    post:
      consumes:
      - application/json
      description: Get roast by username and data
      parameters:
      - description: Prompt
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.GithubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GithubContentResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ContentResponseFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ContentResponseFailure'
      summary: get roast by username and data
      tags:
      - Roast
  /roast/resume:
    post:
      consumes:
      - application/json
      description: Get roast by resume.pdf
      parameters:
      - description: Resume as PDF
        in: formData
        name: file
        required: true
        type: file
      - description: Language for the content default is id
        in: formData
        name: lang
        type: string
      - description: Gemini API key
        in: formData
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ContentResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ContentResponseFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ContentResponseFailure'
      summary: get roast by resume.pdf
      tags:
      - Roast
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
